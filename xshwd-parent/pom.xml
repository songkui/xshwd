<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<properties>

		<argLine>-Djava.security.egd=file:/dev/./urandom -Xmx256m</argLine>
		<assertj.version>3.6.2</assertj.version>
		<awaitility.version>2.0.0</awaitility.version>
		<bucket4j.version>2.0.0</bucket4j.version>
		<commons-io.version>2.5</commons-io.version>
		<commons-lang.version>3.5</commons-lang.version>
		<docker-maven-plugin.version>0.4.13</docker-maven-plugin.version>
		<!-- Overridden to get metrics-jcache -->
		<dropwizard-metrics.version>3.2.2</dropwizard-metrics.version>
		<frontend-maven-plugin.version>1.3</frontend-maven-plugin.version>
		<!--<hazelcast-hibernate52.version>1.2</hazelcast-hibernate52.version>-->
		<hibernate.version>5.2.8.Final</hibernate.version>
		<hikaricp.version>2.6.0</hikaricp.version>
		<jacoco-maven-plugin.version>0.7.9</jacoco-maven-plugin.version>
		<java.version>1.8</java.version>
		<jcache.version>1.0.0</jcache.version>

		<jjwt.version>0.7.0</jjwt.version>
		<liquibase-hibernate5.version>3.6</liquibase-hibernate5.version>
		<liquibase-slf4j.version>2.0.0</liquibase-slf4j.version>
		<logstash-logback-encoder.version>4.9</logstash-logback-encoder.version>
		<m2e.apt.activation>jdt_apt</m2e.apt.activation>
		<mapstruct.version>1.1.0.Final</mapstruct.version>
		<maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>
		<maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
		<maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<maven.version>3.0.0</maven.version>
		<metrics-spring.version>3.1.3</metrics-spring.version>
		<node.version>v6.10.2</node.version>
		<!-- These remain empty unless the corresponding profile is active -->
		<profile.no-liquibase />
		<profile.swagger />
		<prometheus-simpleclient.version>0.0.20</prometheus-simpleclient.version>
		<!-- Sonar properties -->
		<project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
		<run.addResources>false</run.addResources>
		<scala-maven-plugin.version>3.2.2</scala-maven-plugin.version>
		<scala.version>2.12.1</scala.version>
		<sonar-maven-plugin.version>3.2</sonar-maven-plugin.version>

		<sonar.exclusions>src/main/webapp/content/**/*.*,
			src/main/webapp/bower_components/**/*.*, src/main/webapp/i18n/*.js,
			target/www/**/*.*</sonar.exclusions>

		<sonar.issue.ignore.multicriteria>S3437,UndocumentedApi,BoldAndItalicTagsCheck</sonar.issue.ignore.multicriteria>

		<!-- Rule https://sonarqube.com/coding_rules#rule_key=Web%3ABoldAndItalicTagsCheck
			is ignored. Even if we agree that using the "i" tag is an awful practice,
			this is what is recommended by http://fontawesome.io/examples/ -->
		<sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.resourceKey>src/main/webapp/app/**/*.*</sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.resourceKey>
		<sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.ruleKey>Web:BoldAndItalicTagsCheck</sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.ruleKey>
		<!-- Rule https://sonarqube.com/coding_rules#rule_key=squid%3AS3437 is
			ignored, as a JPA-managed field cannot be transient -->
		<sonar.issue.ignore.multicriteria.S3437.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.S3437.resourceKey>
		<sonar.issue.ignore.multicriteria.S3437.ruleKey>squid:S3437</sonar.issue.ignore.multicriteria.S3437.ruleKey>
		<!-- Rule http://sonarqube.com/coding_rules#rule_key=squid%3AUndocumentedApi
			is ignored, as we want to follow "clean code" guidelines and classes, methods
			and arguments names should be self-explanatory -->
		<sonar.issue.ignore.multicriteria.UndocumentedApi.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.UndocumentedApi.resourceKey>
		<sonar.issue.ignore.multicriteria.UndocumentedApi.ruleKey>squid:UndocumentedApi</sonar.issue.ignore.multicriteria.UndocumentedApi.ruleKey>

		<sonar.jacoco.itReportPath>${project.testresult.directory}/coverage/jacoco/jacoco-it.exec</sonar.jacoco.itReportPath>
		<sonar.jacoco.reportPath>${project.testresult.directory}/coverage/jacoco/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>

		<sonar.javascript.jstestdriver.reportsPath>${project.testresult.directory}/karma</sonar.javascript.jstestdriver.reportsPath>
		<!-- For Sonar < 6.2 -->
		<sonar.javascript.lcov.reportPath>${project.testresult.directory}/coverage/report-lcov/lcov.info</sonar.javascript.lcov.reportPath>
		<!-- For Sonar >= 6.2 -->
		<sonar.javascript.lcov.reportPaths>${project.testresult.directory}/coverage/report-lcov/lcov.info</sonar.javascript.lcov.reportPaths>

		<sonar.sources>${project.basedir}/src/main/</sonar.sources>
		<sonar.surefire.reportsPath>${project.testresult.directory}/surefire-reports</sonar.surefire.reportsPath>
		<sonar.tests>${project.basedir}/src/test/</sonar.tests>

		<!-- Spring properties -->
		<springfox.version>2.6.1</springfox.version>
		<validation-api.version>1.1.0.Final</validation-api.version>
		<yarn.version>v0.23.2</yarn.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<mybatisplus-spring-boot-starter.version>1.0.5</mybatisplus-spring-boot-starter.version>
		<java.version>1.8</java.version>
		<jhipster.server.version>1.1.3</jhipster.server.version>
		<jjwt.version>0.7.0</jjwt.version>



		<!-- Spring properties -->
		<springfox.version>2.6.1</springfox.version>
		<validation-api.version>1.1.0.Final</validation-api.version>
		<yarn.version>v0.23.2</yarn.version>

		<mybatisplus.version>2.1.8</mybatisplus.version>
		<commons-io.version>2.5</commons-io.version>
		<commons-lang.version>3.5</commons-lang.version>

		<spring-boot.version>1.5.9.RELEASE</spring-boot.version>
		<spring-cloud.version>Dalston.SR4</spring-cloud.version>
		<transport.version>5.6.1</transport.version>
		<elasticsearch.version>5.6.1</elasticsearch.version>
	</properties>



	<parent>
		<artifactId>spring-boot-starter-parent</artifactId>
		<groupId>org.springframework.boot</groupId>
		<version>1.5.9.RELEASE</version>
	</parent>
	<groupId>com.xshwd.parent</groupId>
	<artifactId>xshwd-parent</artifactId>

	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<dependencies>


		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.11</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.2.1</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.18</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
			<version>3.3.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>3.0.0</version>
		</dependency>

	</dependencies>





	<modules>
		<module>../xshwd-core</module>
		<module>../xshwd-user</module>
		<module>../xshwd-item</module>
	<!--	<module>../xshwd-order</module>-->
	</modules>

	<!--<modules>-->

		<!--<module>../hwjy_xcx_test_user</module>-->

	<!--</modules>-->


	<build>

		<!-- Turn on filtering by default for application properties -->
		<resources>

			<resource>
				<directory>${basedir}/src/main/java</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.xml</include>

				</includes>
			</resource>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/application*.yml</include>
					<include>**/application*.yaml</include>
					<include>**/application*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<excludes>
					<exclude>**/application*.yml</exclude>
					<exclude>**/application*.yaml</exclude>
					<exclude>**/application*.properties</exclude>
				</excludes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<!-- Apply more sensible defaults for user projects -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<configuration>
						<archive>
							<manifest>
								<mainClass>${start-class}</mainClass>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<includes>
							<include>**/*Tests.java</include>
							<include>**/*Test.java</include>
						</includes>
						<excludes>
							<exclude>**/Abstract*.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
						<archive>
							<manifest>
								<mainClass>${start-class}</mainClass>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<configuration>
						<mainClass>${start-class}</mainClass>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<delimiters>
							<delimiter>${resource.delimiter}</delimiter>
						</delimiters>
						<useDefaultDelimiters>false</useDefaultDelimiters>
					</configuration>
				</plugin>
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>revision</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<verbose>true</verbose>
						<dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
						<generateGitPropertiesFile>true</generateGitPropertiesFile>
						<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
					</configuration>
				</plugin>
				<!-- Support our own plugin -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<mainClass>${start-class}</mainClass>
					</configuration>
				</plugin>
				<!-- Support shade packaging (if the user does not want to use our plugin) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<dependencies>
						<dependency>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-maven-plugin</artifactId>
							<version>${spring-boot.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<keepDependenciesWithProvidedScope>true</keepDependenciesWithProvidedScope>
						<createDependencyReducedPom>true</createDependencyReducedPom>
						<filters>
							<filter>
								<artifact>*:*</artifact>
								<excludes>
									<exclude>META-INF/*.SF</exclude>
									<exclude>META-INF/*.DSA</exclude>
									<exclude>META-INF/*.RSA</exclude>
								</excludes>
							</filter>
						</filters>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>shade</goal>
							</goals>
							<configuration>
								<transformers>
									<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
										<resource>META-INF/spring.handlers</resource>
									</transformer>
									<transformer implementation="org.springframework.boot.maven.PropertiesMergingResourceTransformer">
										<resource>META-INF/spring.factories</resource>
									</transformer>
									<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
										<resource>META-INF/spring.schemas</resource>
									</transformer>
									<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
									<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
										<mainClass>${start-class}</mainClass>
									</transformer>
								</transformers>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
